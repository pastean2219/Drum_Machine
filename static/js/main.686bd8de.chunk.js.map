{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["soundsName","heaterKit","smoothPianoKit","soundsGroup","keyCode","keyTrigger","id","url","KeyboardKey","play","sound","handleKeydown","event","React","useEffect","document","addEventListener","className","onClick","src","Keyboard","power","sounds","map","DrumControle","stop","name","volume","changeSoundsGroup","handleVolumeChange","Math","round","max","min","step","type","value","onChange","App","useState","setPower","setVolume","soundName","setSoundName","soundType","setSoundType","setSounds","getElementById","forEach","audio","currentTime","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uOAoHMA,EAAa,CACjBC,UAAW,aACXC,eAAgB,oBAGZC,EAAc,CAClBF,UAvHsB,CACtB,CACEG,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,4DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,4DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,4DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,8DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,OACJC,IAAK,4DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,UACJC,IAAK,0DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,cACJC,IAAK,8DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,OACJC,IAAK,8DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,YACJC,IAAK,2DAmEPL,eA/DuB,CACvB,CACEE,QAAS,GACTC,WAAY,IACZC,GAAI,UACJC,IAAK,2DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,UACJC,IAAK,2DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,UACJC,IAAK,2DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,SACJC,IAAK,mEAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,UACJC,IAAK,2DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,YACJC,IAAK,0DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,cACJC,IAAK,iEAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,aACJC,IAAK,gEAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,QACJC,IAAK,6DAaHC,EAAc,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,KAAgD,IAA1CC,MAAOJ,EAAmC,EAAnCA,GAAID,EAA+B,EAA/BA,WAAYE,EAAmB,EAAnBA,IAAKH,EAAc,EAAdA,QAChDO,EAAgB,SAACC,GAClBA,EAAMR,UAAYA,GACnBK,EAAKJ,EAAYC,IAOrB,OAHAO,IAAMC,WAAU,WACdC,SAASC,iBAAiB,UAAWL,KACpC,IAED,yBAAQL,GAAIF,EAASa,UAAU,WAAWC,QAAS,kBAAMT,EAAKJ,EAAYC,IAA1E,UACE,uBAAOW,UAAU,OAAOX,GAAID,EAAYc,IAAKZ,IAC5CF,MAKDe,EAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOZ,EAAT,EAASA,KAAMa,EAAf,EAAeA,OAAf,OACd,qBAAKL,UAAU,WAAf,SACII,EACCC,EAAOC,KAAI,SAACb,GAAD,OAAW,cAAC,EAAD,CAAaD,KAAMA,EAAMC,MAAOA,OACtDY,EAAOC,KAAI,SAACb,GAAD,OAAW,cAAC,EAAD,CAAaD,KAAMA,EAAMC,MAAK,2BAAMA,GAAN,IAAaH,IAAI,cAKtEiB,EAAe,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,KAAML,EAAd,EAAcA,MAAOM,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,kBAAmBC,EAAhD,EAAgDA,mBAAhD,OACnB,sBAAKZ,UAAU,WAAf,UACE,yBAAQC,QAASO,EAAjB,4BAAuCJ,EAAQ,MAAQ,QACvD,2CAAcS,KAAKC,MAAe,IAATJ,MACzB,uBAAOK,IAAI,IAAIC,IAAI,IAAIC,KAAK,OAAOC,KAAK,QAAQC,MAAOT,EAAQU,SAAUR,IACzE,oBAAIvB,GAAG,UAAP,SAAkBoB,IAClB,wBAAQR,QAASU,EAAjB,oCAmEWU,MA/Df,WACE,MAAyBC,oBAAS,GAAlC,mBAAOlB,EAAP,KAAcmB,EAAd,KACA,EAA2BD,mBAAS,GAApC,mBAAOZ,EAAP,KAAec,EAAf,KACA,EAAiCF,mBAAS,IAA1C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAiCJ,mBAAS,aAA1C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA2BN,mBAASpC,EAAYyC,IAAhD,mBAAOtB,EAAP,KAAewB,EAAf,KAqCA,OACE,qBAAK7B,UAAU,MAAf,SAEE,sBAAKX,GAAG,eAAR,eAXagB,EAAOC,KAAI,SAAAb,GAAK,OAAIK,SAASgC,eAAerC,EAAML,eAC1D2C,SAAQ,SAAAC,GACVA,IACDA,EAAMtB,OAASA,MAUf,oBAAIV,UAAU,QAAd,0BACA,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CAAUI,MAAOA,EAAMZ,KAlClB,SAACJ,EAAYK,GACxBiC,EAAajC,GACb,IAAMuC,EAAQlC,SAASgC,eAAe1C,GACtC4C,EAAMC,YAAc,EACpBD,EAAMxC,QA8BmCa,OAAQA,IAC3C,cAAC,EAAD,CACAG,KA5CK,WACXe,GAAUnB,IA4CJA,MAAOA,EACPM,OAAQA,EACRE,mBA3CmB,SAACjB,GAC1B6B,EAAU7B,EAAMuC,OAAOf,QA2CjBV,KAAMgB,GAAa1C,EAAW4C,GAC9BhB,kBAlCkB,WACxBe,EAAa,IACI,cAAdC,GACDC,EAAa,kBACbC,EAAU3C,EAAYD,kBAEtB2C,EAAa,aACbC,EAAU3C,EAAYF,wBCpLbmD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhD,SAASgC,eAAe,SAM1BK,M","file":"static/js/main.686bd8de.chunk.js","sourcesContent":["import React,{useState} from \"react\";\nimport './App.css';\n\nconst firstSoundGroup = [\n  {\n    keyCode: 81,\n    keyTrigger: 'Q',\n    id: 'Heater-1',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n  },\n  {\n    keyCode: 87,\n    keyTrigger: 'W',\n    id: 'Heater-2',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n  },\n  {\n    keyCode: 69,\n    keyTrigger: 'E',\n    id: 'Heater-3',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n  },\n  {\n    keyCode: 65,\n    keyTrigger: 'A',\n    id: 'Heater-4',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n  },\n  {\n    keyCode: 83,\n    keyTrigger: 'S',\n    id: 'Clap',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n  },\n  {\n    keyCode: 68,\n    keyTrigger: 'D',\n    id: 'Open-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n  },\n  {\n    keyCode: 90,\n    keyTrigger: 'Z',\n    id: \"Kick-n'-Hat\",\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n  },\n  {\n    keyCode: 88,\n    keyTrigger: 'X',\n    id: 'Kick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n  },\n  {\n    keyCode: 67,\n    keyTrigger: 'C',\n    id: 'Closed-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n  }\n];\n\nconst secondSaundGroup = [\n  {\n    keyCode: 81,\n    keyTrigger: 'Q',\n    id: 'Chord-1',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\n  },\n  {\n    keyCode: 87,\n    keyTrigger: 'W',\n    id: 'Chord-2',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\n  },\n  {\n    keyCode: 69,\n    keyTrigger: 'E',\n    id: 'Chord-3',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\n  },\n  {\n    keyCode: 65,\n    keyTrigger: 'A',\n    id: 'Shaker',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\n  },\n  {\n    keyCode: 83,\n    keyTrigger: 'S',\n    id: 'Open-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\n  },\n  {\n    keyCode: 68,\n    keyTrigger: 'D',\n    id: 'Closed-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\n  },\n  {\n    keyCode: 90,\n    keyTrigger: 'Z',\n    id: 'Punchy-Kick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\n  },\n  {\n    keyCode: 88,\n    keyTrigger: 'X',\n    id: 'Side-Stick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\n  },\n  {\n    keyCode: 67,\n    keyTrigger: 'C',\n    id: 'Snare',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\n  }\n];\nconst soundsName = {\n  heaterKit: \"Heater Kit\",\n  smoothPianoKit: \"Smooth Piano Kit\"\n}\n\nconst soundsGroup = {\n  heaterKit: firstSoundGroup,\n  smoothPianoKit: secondSaundGroup\n}\n\nconst KeyboardKey = ({play, sound:{id, keyTrigger, url, keyCode}}) => {\n  const handleKeydown = (event) => {\n    if(event.keyCode === keyCode){\n      play(keyTrigger, id)\n    }\n  }\n\n  React.useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeydown)\n  }, [])\n  return (\n    <button id={keyCode} className=\"drum-pad\" onClick={() => play(keyTrigger, id)}>\n      <audio className=\"clip\" id={keyTrigger} src={url}></audio>\n      {keyTrigger}\n    </button>\n  )\n}\n\nconst Keyboard =({power, play, sounds}) => (\n  <div className=\"keyboard\">\n     {power \n     ? sounds.map((sound) => <KeyboardKey play={play} sound={sound}/>)\n     : sounds.map((sound) => <KeyboardKey play={play} sound={{...sound, url:\"#\"}}/>)\n     }\n  </div>\n)\n\nconst DrumControle = ({stop, name, power, volume, changeSoundsGroup, handleVolumeChange}) => (\n  <div className=\"controle\">\n    <button onClick={stop}>Turn the Power {power ? \"OFF\" : \"ON\"}</button>\n    <h2>Volume: %{Math.round(volume * 100)}</h2>\n    <input max=\"1\" min=\"0\" step=\"0.01\" type=\"range\" value={volume} onChange={handleVolumeChange}/>\n    <h2 id=\"display\">{name}</h2>\n    <button onClick={changeSoundsGroup}>Change Sound Group</button>\n  </div>\n)\n\nfunction App() {\n  const [power, setPower]= useState(true)\n  const [volume, setVolume]= useState(1)\n  const [soundName, setSoundName]= useState(\"\")\n  const [soundType, setSoundType]= useState(\"heaterKit\")\n  const [sounds, setSounds]= useState(soundsGroup[soundType])\n\n  const stop = () => {\n    setPower(!power)\n  }\n\n  const handleVolumeChange = (event) => {\n    setVolume(event.target.value)\n  }\n\n  const play = (keyTrigger, sound) => {\n    setSoundName(sound)\n    const audio = document.getElementById(keyTrigger);\n    audio.currentTime = 0;\n    audio.play()\n  }\n\n  const changeSoundsGroup = () => {\n    setSoundName(\"\")\n    if(soundType === \"heaterKit\"){\n      setSoundType(\"smoothPianoKit\")\n      setSounds(soundsGroup.smoothPianoKit)\n    } else {\n      setSoundType(\"heaterKit\")\n      setSounds(soundsGroup.heaterKit)\n    }\n  }\n\n  const setKeyVolume = () => {\n    const audios = sounds.map(sound => document.getElementById(sound.keyTrigger))\n    audios.forEach(audio => {\n      if(audio){\n        audio.volume = volume\n      }\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      \n      <div id=\"drum-machine\">\n        {setKeyVolume()}\n        <h2 className=\"title\">Drum Machine</h2>\n        <div className=\"wrapper\">\n          <Keyboard power={power}play={play} sounds={sounds}/>\n          <DrumControle\n          stop={stop}\n          power={power}\n          volume={volume}\n          handleVolumeChange={handleVolumeChange} \n          name={soundName || soundsName[soundType]} \n          changeSoundsGroup={changeSoundsGroup}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}